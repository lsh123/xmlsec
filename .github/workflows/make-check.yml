name: Make Check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-msvc:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - crypto: mscrypto
            config_flags: unicode=yes with-dl=yes
          - crypto: mscng
            config_flags: unicode=yes with-dl=yes
          - crypto: openssl-300
            config_flags: unicode=yes with-dl=yes
          - crypto: openssl-110
            config_flags: unicode=yes with-dl=yes
          - crypto: mscrypto
            config_flags: unicode=no with-dl=no
          - crypto: mscng
            config_flags: unicode=no with-dl=no
    env:
      VISUAL_STUDIO_ROOT: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise"
      EXTRAS_FOLDER: C:\extras
      EXTRAS_URL: https://www.aleksey.com/xmlsec/download/extras
      LIBXML2_FILE: libxml2-2.9.8-noiconv-win-x64.7z
      LIBXSLT_FILE: libxslt-1.1.32-noiconv-win-x64.7z
      OPENSSL300_FILE: openssl-3.0.3-win-x64.7z
      OPENSSL110_FILE: openssl-1.1.1o-win-x64.7z
    steps:
    - name: install dependencies
      run: |
        mkdir ${{ env.EXTRAS_FOLDER }}
        cd ${{ env.EXTRAS_FOLDER }}
        Invoke-WebRequest ${{ env.EXTRAS_URL }}/${{ env.LIBXML2_FILE }} -O ${{ env.LIBXML2_FILE }}
        7z x ${{ env.LIBXML2_FILE }}
        Invoke-WebRequest ${{ env.EXTRAS_URL }}/${{ env.LIBXSLT_FILE }} -O ${{ env.LIBXSLT_FILE }}
        7z x ${{ env.LIBXSLT_FILE }}
        if(${{ matrix.crypto }} -like "*openssl-300*") {
            Invoke-WebRequest ${{ env.EXTRAS_URL }}/${{ env.OPENSSL300_FILE }} -O ${{ env.OPENSSL300_FILE }}
            7z x ${{ env.OPENSSL300_FILE }}
        } elseif(${{ matrix.crypto }} -like "*openssl-300*") {
            Invoke-WebRequest ${{ env.EXTRAS_URL }}/${{ env.OPENSSL110_FILE }} -O ${{ env.OPENSSL110_FILE }}
            7z x ${{ env.OPENSSL110_FILE }}
        }
    - run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: configure
      working-directory: win32
      shell: cmd
      run: |
        call "${{ env.VISUAL_STUDIO_ROOT }}\VC\Auxiliary\Build\vcvars64.bat"
        set PATH=${{ env.EXTRAS_FOLDER }}\bin;${{ env.EXTRAS_FOLDER }}\lib;;%PATH%
        cscript configure.js pedantic=yes werror=yes iconv=no static=yes crypto=${{ matrix.crypto }} ${{ matrix.config_flags }} prefix=${{ env.EXTRAS_FOLDER }} include=${{ env.EXTRAS_FOLDER }}\include;${{ env.EXTRAS_FOLDER }}\include\libxml2;%MSSDK_INCLUDE% lib=${{ env.EXTRAS_FOLDER }}\bin;${{ env.EXTRAS_FOLDER }}\lib;%MSSDK_LIB%
    - name: make
      working-directory: win32
      shell: cmd
      run: |
        call "${{ env.VISUAL_STUDIO_ROOT }}\VC\Auxiliary\Build\vcvars64.bat"
        set PATH=${{ env.EXTRAS_FOLDER }}\bin;${{ env.EXTRAS_FOLDER }}\lib;;%PATH%
        nmake
    - name: make check
      working-directory: win32
      shell: cmd
      run: |
        call "${{ env.VISUAL_STUDIO_ROOT }}\VC\Auxiliary\Build\vcvars64.bat"
        set PATH=${{ env.EXTRAS_FOLDER }}\bin;${{ env.EXTRAS_FOLDER }}\lib;%PATH%
        nmake check