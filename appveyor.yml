# Continuous Integration script for xmlsec
# Author: Peter Budai <peterbudai@hotmail.com>

# In order to enable appveyor CI in your GitHub repository, please follow the steps
# described in Appyors's Getting Started:  https://www.appveyor.com/docs/
#
# After you add your project to Appveyor, it will recognize this script, and will
# launch the first build process. Every build runs on a fresh virtual machine which is
# not shared with other builds and the state of which is not preserved between consequent
# builds. After the build is finished its virtual machine is decommissioned.
#
# You can check the whole build process in the logs, and any later commit will start
# a new build using a fresh virtual machine.

version: '1.2.30-{build}'

shallow_clone: true
skip_branch_with_pr: true
skip_tags: true
skip_commits:
  files:
    - docs/*
    - man/*

image:
- Visual Studio 2017

environment:
  global:
    EXTRAS_FOLDER: C:\extras
    EXTRAS_URL: https://www.aleksey.com/xmlsec/download/extras
    LIBXML2_FILE: libxml2-2.9.8-noiconv-win-x64.7z
    LIBXSLT_FILE: libxslt-1.1.32-noiconv-win-x64.7z
    OPENSSL_FILE: openssl-1.1.0h-x64.7z

  matrix:
    - COMPILER: MSVC17
      CRYPTO: mscrypto
      STATIC: no
      UNICODE: yes
      WERROR: yes

    - COMPILER: MSVC17
      CRYPTO: mscng
      STATIC: no
      UNICODE: yes
      WERROR: yes

    - COMPILER: MSVC17
      CRYPTO: openssl
      STATIC: no
      UNICODE: yes
      WERROR: no

    - COMPILER: MSVC17
      CRYPTO: mscrypto
      STATIC: no
      UNICODE: no
      WERROR: yes

    - COMPILER: MSVC17
      CRYPTO: mscng
      STATIC: no
      UNICODE: no
      WERROR: yes

    - COMPILER: MinGW-w64
      STATIC: no
      UNICODE: yes
    
    - COMPILER: MinGW-w64
      STATIC: yes
      UNICODE: no

init:
  - git config --global core.autocrlf input
  - if [%COMPILER%]==[MinGW-w64] set PATH=C:\msys64\usr\bin;C:\msys64\mingw64\bin;%PATH%
  - if [%COMPILER%]==[MSVC17] set PATH=%EXTRAS_FOLDER%\bin;%EXTRAS_FOLDER%\lib;;%PATH%
    
install:
  - if [%COMPILER%]==[MinGW-w64] pacman --noconfirm --sync --refresh --refresh --sysupgrade --sysupgrade
  - if [%COMPILER%]==[MinGW-w64] pacman -S --noconfirm --needed mingw-w64-x86_64-{toolchain,libtool}
  - if [%COMPILER%]==[MinGW-w64] pacman -S --noconfirm --needed mingw-w64-x86_64-{libxml2,libxslt,openssl,gnutls}
  - if [%COMPILER%]==[MSVC17] call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if [%COMPILER%]==[MSVC17] mkdir %EXTRAS_FOLDER% && cd %EXTRAS_FOLDER%
  - if [%COMPILER%]==[MSVC17] appveyor DownloadFile %EXTRAS_URL%/%LIBXML2_FILE%
  - if [%COMPILER%]==[MSVC17] 7z x %LIBXML2_FILE%
  - if [%COMPILER%]==[MSVC17] appveyor DownloadFile %EXTRAS_URL%/%LIBXSLT_FILE%
  - if [%COMPILER%]==[MSVC17] 7z x %LIBXSLT_FILE%
  - if [%COMPILER%]==[MSVC17] appveyor DownloadFile %EXTRAS_URL%/%OPENSSL_FILE%
  - if [%COMPILER%]==[MSVC17] 7z x %OPENSSL_FILE%
  - if [%COMPILER%]==[MSVC17] cd %APPVEYOR_BUILD_FOLDER%

build_script:
  - if [%COMPILER%]==[MinGW-w64] mkdir build && cd build
  - if [%COMPILER%]==[MinGW-w64] bash ../autogen.sh --build="x86_64-w64-mingw32" --host="x86_64-w64-mingw32" --enable-unicode=$UNICODE --enable-mscrypto --enable-mscng --enable-openssl --enable-gnutls --enable-static-linking=$STATIC
  - if [%COMPILER%]==[MinGW-w64] make
  - if [%COMPILER%]==[MSVC17] cd win32
  - if [%COMPILER%]==[MSVC17] cscript configure.js static=%STATIC% crypto=%CRYPTO% werror=%WERROR% iconv=no unicode=%UNICODE% prefix=%EXTRAS_FOLDER% include=%EXTRAS_FOLDER%\include;%EXTRAS_FOLDER%\include\libxml2;%MSSDK_INCLUDE% lib=%EXTRAS_FOLDER%\bin;%EXTRAS_FOLDER%\lib;%MSSDK_LIB%
  - if [%COMPILER%]==[MSVC17] nmake
 
test_script:
  - if [%COMPILER%]==[MinGW-w64] make check
  - if [%COMPILER%]==[MSVC17] nmake check


