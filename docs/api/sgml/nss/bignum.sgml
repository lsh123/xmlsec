<refentry id="xmlsec-nss-bignum">
<refmeta>
<refentrytitle>bignum</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC-NSS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bignum</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



<link linkend="SECItem">SECItem</link>*    <link linkend="xmlSecNssNodeGetBigNumValue">xmlSecNssNodeGetBigNumValue</link>     (<link linkend="PRArenaPool">PRArenaPool</link> *arena,
                                             const <link linkend="xmlNode">xmlNodePtr</link> cur,
                                             <link linkend="SECItem">SECItem</link> *a);
int         <link linkend="xmlSecNssNodeSetBigNumValue">xmlSecNssNodeSetBigNumValue</link>     (<link linkend="xmlNode">xmlNodePtr</link> cur,
                                             const <link linkend="SECItem">SECItem</link> *a,
                                             int addLineBreaks);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="xmlSecNssNodeGetBigNumValue">xmlSecNssNodeGetBigNumValue ()</title>
<programlisting><link linkend="SECItem">SECItem</link>*    xmlSecNssNodeGetBigNumValue     (<link linkend="PRArenaPool">PRArenaPool</link> *arena,
                                             const <link linkend="xmlNode">xmlNodePtr</link> cur,
                                             <link linkend="SECItem">SECItem</link> *a);</programlisting>
<para>
Converts the node content from CryptoBinary format 
(http://www.w3.org/TR/xmldsig-core/<link linkend="sec-CryptoBinary">sec-CryptoBinary</link>) 
to a SECItem. If no SECItem object provided then a new
one is created (caller is responsible for freeing it).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>arena</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cur</parameter>&nbsp;:</term>
<listitem><simpara> the poitner to an XML node.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&nbsp;:</term>
<listitem><simpara> a SECItem object to hold the BigNum value
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a pointer to SECItem produced from CryptoBinary string
or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecNssNodeSetBigNumValue">xmlSecNssNodeSetBigNumValue ()</title>
<programlisting>int         xmlSecNssNodeSetBigNumValue     (<link linkend="xmlNode">xmlNodePtr</link> cur,
                                             const <link linkend="SECItem">SECItem</link> *a,
                                             int addLineBreaks);</programlisting>
<para>
Converts SECItem to CryptoBinary string
(http://www.w3.org/TR/xmldsig-core/<link linkend="sec-CryptoBinary">sec-CryptoBinary</link>) 
and sets it as the content of the given node. If the 
addLineBreaks is set then line breaks are added 
before and after the CryptoBinary string.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cur</parameter>&nbsp;:</term>
<listitem><simpara> the pointer to an XML node.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>a</parameter>&nbsp;:</term>
<listitem><simpara> a SECItem containing the BigNum value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>addLineBreaks</parameter>&nbsp;:</term>
<listitem><simpara> if the flag is equal to 1 then 
	linebreaks will be added before and after
	new buffer content.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or -1 otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
